{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","utils/getFilteredTodoList.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","status","query","defaultState","All","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","isTodoIncludesQuery","title","includes","TodoList","dispatch","filteredTodoList","Active","completed","Completed","getFilteredTodoList","length","className","map","id","classNames","onClick","onSelectTodo","TodoFilter","useState","searchText","setSearchText","currentStatus","onSearch","onSubmit","event","preventDefault","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","href","email","name","App","isTodoListLoading","setIsTodoListLoading","currentUser","setCurrentUser","filteredTodos","useEffect","todosActions","finally","userId","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57fd858e.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = {\n  type: 'currentTodo/REMOVE'\n};\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo | null;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({\n  type: 'currentTodo/REMOVE',\n});\n\nconst setTodo = (todo: Todo | null): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype FilterStatusAction = { type: 'filter/STATUS', payload: Status };\ntype FilterQueryAction = { type: 'filter/QUERY', payload: string };\n\nconst filterStatus = (status: Status): FilterStatusAction => ({\n  type: 'filter/STATUS',\n  payload: status,\n});\n\nconst filterQuery = (query: string): FilterQueryAction => ({\n  type: 'filter/QUERY',\n  payload: query,\n});\n\nexport const actions = {\n  filterStatus,\n  filterQuery,\n};\n\ntype Action = FilterStatusAction | FilterQueryAction;\n\nexport type State = {\n  query: string,\n  status: Status,\n};\n\nconst defaultState: State = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (state: State = defaultState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET', payload: todos,\n});\n\nexport const actions = {\n  setTodos,\n};\n\ntype Action = SetTodosAction;\n\ntype State = Todo[] | null;\n\nconst todosReducer = (state: State = null, action: Action): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from '../types/Todo';\nimport { State as FilterState } from '../features/filter';\nimport { Status } from '../types/Status';\n\nconst isTodoIncludesQuery = (todo: Todo, query: string): boolean => {\n  return todo.title.includes(query);\n};\n\nexport const getFilteredTodoList = (\n  todos: Todo[] | null,\n  filter: FilterState,\n): Todo[] => {\n  if (!todos) {\n    return [];\n  }\n\n  switch (filter.status) {\n    case Status.All:\n      return todos.filter(todo => isTodoIncludesQuery(todo, filter.query));\n\n    case Status.Active:\n      return todos.filter(todo => !todo.completed\n        && isTodoIncludesQuery(todo, filter.query));\n\n    case Status.Completed:\n      return todos.filter(todo => todo.completed\n        && isTodoIncludesQuery(todo, filter.query));\n\n    default:\n      return todos;\n  }\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\nimport { getFilteredTodoList } from '../../utils/getFilteredTodoList';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { todos, currentTodo, filter } = useAppSelector(state => state);\n\n  const filteredTodoList = getFilteredTodoList(todos, filter);\n\n  const onSelectTodo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {filteredTodoList.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodoList.map((todo) => (\n              <tr\n                data-cy=\"todo\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => onSelectTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames('fas', {\n                        'fa-eye': currentTodo?.id !== todo.id,\n                        'fa-eye-slash': currentTodo?.id === todo.id,\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Status } from '../../types/Status';\nimport { actions } from '../../features/filter';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const [searchText, setSearchText] = useState('');\n\n  const dispatch = useDispatch();\n  const currentStatus = useAppSelector(state => state.filter.status);\n\n  const todoListFilter = (status: Status) => {\n    dispatch(actions.filterStatus(status));\n  };\n\n  const onSearch = (query: string) => {\n    setSearchText(query);\n    dispatch(actions.filterQuery(query));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={currentStatus}\n            onChange={e => todoListFilter(e.target.value as Status)}\n          >\n            <option value={Status.All}>\n              All\n            </option>\n            <option value={Status.Active}>\n              Active\n            </option>\n            <option value={Status.Completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchText}\n          onChange={(e) => onSearch(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {searchText.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { actions } from '../../features/currentTodo';\n\ninterface Props {\n  user: User | null;\n  setUser: (value: User | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ user, setUser }) => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const onCloseModal = () => {\n    dispatch(actions.setTodo(null));\n    setUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? <Loader /> : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo # ${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { User } from './types/User';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isTodoListLoading, setIsTodoListLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filteredTodos = useAppSelector(state => state.filter);\n\n  useEffect(() => {\n    getTodos()\n      .then(res => {\n        dispatch(todosActions.setTodos(res));\n      })\n      .finally(() => setIsTodoListLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (!currentTodo) {\n      return;\n    }\n\n    getUser(currentTodo.userId).then(res => {\n      setCurrentUser(res);\n    });\n  }, [currentTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {!isTodoListLoading && (\n              <>\n                <h1 className=\"title\">Todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n              </>\n            )}\n\n            <div className=\"block\">\n              {isTodoListLoading || !filteredTodos\n                ? (<Loader />)\n                : (<TodoList />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal user={currentUser} setUser={setCurrentUser} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}